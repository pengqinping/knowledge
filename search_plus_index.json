{"./":{"url":"./","title":"Knowledge","keywords":"","body":"Knowledge 记录学习过程中的知识点，主要记录开发技术相关. 电脑的搭建的开发环境 本项目加入 npm 管理 npm start == gitbook serve 启动本地服务 npm run deploy == gitbook build && git subtree push --prefix=_book origin coding-pages 把build 生成的文件 _book 发布到 远程的 coding-pages npm run pdf == gitbook pdf ./ ./konwledge.pdf 把工程生成 konwledge.pdf 文件 npm run epub 和 npm run pdf 一样是生成文件 npm run push 自动提交 ,在运行后，等待输入的地方 输入提交日志即可自动提交 pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 13:43:17 "},"chapter1-localdev/":{"url":"chapter1-localdev/","title":"本地开发环境","keywords":"","body":"本地开发环境 GitBook GitBook-本地环境配置 GitBook-book.json Hexo Hexo-本地环境配置 pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 13:20:40 "},"chapter1-localdev/GitBook-环境搭建.html":{"url":"chapter1-localdev/GitBook-环境搭建.html","title":"GitBook环境搭建及项目创建","keywords":"","body":"GitBook环境配置和常用命令 node.js 官网: https://nodejs.org/en/download 安装gitbook命令行工具 命令行执行：npm install -g gitbook-cli 安装后可以使用全局命令 gitbook 在本地创建一个文件夹 然后 进入 初始化gitbook ： gitbook init 会生成两个文件, README.md 书籍的介绍写在这里， SUMMARY.md 文件书籍目录结构在这里配置 找一个 markdown 编辑文件 (Typora， VsCode, Atom,) 以下步骤使用命令操作 在目录中新增章节的目录后使用 gitbook init 会自动生成章节的文件 启动本地服务器 gitbook serve 自动编译为静态html文件 生成html目录 gitbook build [书籍路径] [输出路径] 生成PDF文件 gitbook pdf ./ ./mybook.pdf 生成epub电子书 gitbook epub ./ ./mybook.epub pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 08:54:52 "},"chapter1-localdev/GitBook-book.json.html":{"url":"chapter1-localdev/GitBook-book.json.html","title":"GitBook之book.json配置","keywords":"","body":" GitBook 详解 GitBook book.json 说明及使用 book.json 字段说明 styles 的配置 gitbok 插件安装的方法 gitbook 默认插件 book.json 实例 gitbook 常用插件 back-to-top-button chapter-fold code sharing-plus tbfed-pagefooter page-copyright simple-page-toc ancre-navigation klipse donate pageview-count popup GitBook 详解 GitBook book.json 说明及使用 Question Answer book.json是用来做什么的? 配置 Gitbook 生成静态页面的配置文件 book.json怎么创建放在那里？ 手动创建，gitbook 项目的根目录，和 SUMMARY.md 同级 book.json有哪些配置？ title, author, description, language, links , styles, plugins, pluginsConfig 字段说明 本项目book.json配置 styles中的样式指定文件( \"website\": \"assert/style/website.css\",)怎么生成？ 自己创建和编写，根据需求调整样式，路径可以自己定义， 详细配置 在book.json配置plugins 后怎么生效呢？ 1. 首先插件要配置正确，名称千万不要错， 2. 安装插件，这里介绍三种方法 3. gitbook buil 即可生效 默认插件有哪些？屏蔽默认插件如何操作 1. 屏蔽默认插件，在 book.json 中 的 plugins 中配置 -highlight 这样就去掉了默认的高亮插件， 2. 默认的插件有 常见的插件有哪些？ 常见的插件说明及使用 book.json 字段说明 属性 含义 Demo title 设置书本的标题 \"title\": \"Knowledge\" author 作者的相关信息 \"author\": \"Royal\" description 本书的简单描述 \"description\":\"这是我的环境配置说明\" language Gitbook使用的语言 \"language\": \"zh-hans\" styles 自定义页面样式，用于 book build \"style\":{ \"website\": \"assert/style/website.css\"} plugins 插件列表 \"plugins\":{\"back-to-top-button\"} pluginsConfig 插件配置 具体配置根据使用的插件进行配置 styles 的配置 目前style配置根据导出的文件类型来，目前也就下面几种类型 styles Key 含义 website 生成Html将会使用的样式文件 ebook 生成ebook..... pdf 生成pdf..... mobi 生成mobi..... epub 生成epub..... gitbok 插件安装的方法 在根目录下执行 gitbook install 使用npm安装，命令格式 npm install gitbook-plugin-插件名字，如 npm install gitbook-plugin-code 从 GitHub 下载源码，放到node_modules文件夹里 gitbook 默认插件 插件名词 说明 highlight： 代码高亮 search： 导航栏查询功能（不支持中文） sharing： 右上角分享功能 font-settings： 字体设置（最上方的\"A\"符号） livereload： 为GitBook实时重新加载 book.json 实例 { \"title\": \"Knowledge\", \"language\": \"zh-hans\", \"plugins\": [ \"code\", \"back-to-top-button\", \"tbfed-pagefooter\", \"search-pro\", \"fontsettings\", \"simple-page-toc\", \"links\" ], \"styles\": { \"website\": \"assert/style/website.css\", \"ebook\": \"assert/style/ebook.css\", \"pdf\": \"assert/style/pdf.css\", \"mobi\": \"assert/style/mobi.css\", \"epub\": \"assert/style/epub.css\" }, \"pluginsConfig\": { \"tbfed-pagefooter\": { \"copyright\": \"pengqinping\", \"modify_label\": \"最后更新时间：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, \"fontsettings\": { \"theme\": \"white\", \"family\": \"serif\", \"size\": 12 }, \"simple-page-toc\": { \"maxDepth\": 3, \"skipFirstH1\": true }, \"links\": { \"gitbook\": false } } } gitbook 常用插件 参考地址：https://www.jianshu.com/p/427b8bb066e6 插件大全：https://zhaoda.net/2015/11/09/gitbook-plugins/ 插件大全：http://gitbook.zhangjikai.com/plugins.html#gitbook-%E6%8F%92%E4%BB%B6 back-to-top-button 插件名词 back-to-top-button 返回头部 修改配置 在book.json 中新增插件 \"plugins\" : [ \"page-toc-button\" ] 新增插件配置 \"pluginsConfig\": { \"page-toc-button\": {\"maxTocDepth\": 2, \"minTocSize\": 2} } 安装方法 1. gitbook install 2. npm install gitbook-plugin-back-top-button 图示 chapter-fold 插件名词 chapter-fold 折叠目录 修改配置 在book.json 中新增插件 \"plugins\" : [ \"chapter-fold\" ] 安装方法 1. gitbook install 2. npm install gitbook-plugin-chapter-fold 图示 code 插件名词 code 显示代码copy按钮 修改配置 在book.json 中新增插件 \"plugins\" : [ \"code\" ] 新增配置 \"pluginsConfig\": { \"code\": {\"copyButtons\": false } } 安装方法 1. gitbook install 2. npm install gitbook-plugin-code 参数配置 copyButtons 是否显示 copy 按钮 图示 sharing-plus 插件名词 sharing-plus 分享插件 修改配置 在book.json 中新增插件 \"plugins\" : [ \"sharing-plus\" ] 新增配置 安装方法 1. gitbook install 2. npm install gitbook-plugin-sharing-plus 参数配置 为true的代表直接显示在页面顶端，为false的不显示，不写默认为false \"all\"中代表点击分享符号显示出来的 图示 tbfed-pagefooter 插件名词 tbfed-pagefooter 页面添加页脚 修改配置 在book.json 中新增插件 \"plugins\" : [ \"tbfed-pagefooter\" ] 新增配置 安装方法 1. gitbook install 2. npm install gitbook-plugin-tbfed-pagefooter 图示 page-copyright 插件名词 page-copyright 页面添加页脚 修改配置 在book.json 中新增插件 \"plugins\" : [ \"page-copyright\" ] 新增配置 安装方法 1. gitbook install 2. npm install gitbook-plugin-page-copyright 图示 暂时无图，可以自己配置 simple-page-toc 插件名词 simple-page-toc 生成本页目录 修改配置 在book.json 中新增插件 \"plugins\" : [ \"simple-page-toc\" ] 新增配置 \"simple-page-toc\": { \"maxDepth\": 3, \"skipFirstH1\": true} 安装方法 1. gitbook install 2. npm install gitbook-plugin-simple-page-toc 参数说明 maxTocDepth 标题的最大深度（2 = h1 + h2 + h3）。不支持值> 2 minTocSize 显示toc按钮的最小toc条目数。 新增方法 使用方法: 在需要生成目录的地方用下面的标签括起来，全文都生成的话就在首尾添加 &lt;!-- toc --&gt; &lt;!-- endtoc --&gt; 图示 ancre-navigation 插件名词 ancre-navigation 悬浮目录和返回 修改配置 在book.json 中新增插件 \"plugins\" : [ \"ancre-navigation\" ] 安装方法 1. gitbook install 2. npm install gitbook-plugin-ancre-navigation 图示 klipse 插件名词 klipse 嵌入类似IDE的功能 修改配置 在book.json 中新增插件 \"plugins\" : [ \"klipse\" ] 安装方法 1. gitbook install 2. npm install gitbook-plugin-klipse 支持语言 Javascript ,ruby,C++, PHP ,Python, JSX ,EcmaScript2017,Google Charts,Scheme, BrainFuck 代码实例 如下 print [x + 1 for x in range(10)] donate 插件名词 donate 打赏插件 修改配置 在book.json 中新增插件 \"plugins\" : [ \"donate\" ] \"pluginsConfig\": { \"donate\": { \"wechat\": picWeChar,\"alipay\": zfbpic, \"title\": \"\",\"button\": \"赏\",\"alipayText\": \"支付宝打赏\", \"wechatText\": \"微信打赏\" } } 安装方法 1. gitbook install 2. npm install gitbook-plugin-donate 参数说明 wechat 微信收款图片 alipay 支付宝收款图片 图示 无测试图片 pageview-count 插件名词 pageview-count 阅读量计数 修改配置 在book.json 中新增插件 \"plugins\" : [ \"ageview-count\" ] 安装方法 1. gitbook install 2. npm install gitbook-pageview-count 图示 popup 插件名词 popup 弹出大图 修改配置 在book.json 中新增插件 \"plugins\" : [ \"popup\" ] 安装方法 1. gitbook install 2. npm install gitbook-popup 图示 点击图片弹出预览 pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 08:54:52 "},"chapter1-localdev/hexo-环境搭建.html":{"url":"chapter1-localdev/hexo-环境搭建.html","title":"Hexo快速构建个人博客","keywords":"","body":"Hexo快速构建个人博客 pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 08:54:52 "},"dev-gitbook/":{"url":"dev-gitbook/","title":"GitBook","keywords":"","body":"GitBook Some links https://www.gitbook.com/ https://github.com/GitbookIO/gitbook pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 14:16:46 "},"dev-gitbook/GitBook-环境搭建.html":{"url":"dev-gitbook/GitBook-环境搭建.html","title":"GitBook环境搭建及项目创建","keywords":"","body":"GitBook环境配置和常用命令 node.js 官网: https://nodejs.org/en/download 安装gitbook命令行工具 命令行执行：npm install -g gitbook-cli 安装后可以使用全局命令 gitbook 在本地创建一个文件夹 然后 进入 初始化gitbook ： gitbook init 会生成两个文件, README.md 书籍的介绍写在这里， SUMMARY.md 文件书籍目录结构在这里配置 找一个 markdown 编辑文件 (Typora， VsCode, Atom,) 以下步骤使用命令操作 在目录中新增章节的目录后使用 gitbook init 会自动生成章节的文件 启动本地服务器 gitbook serve 自动编译为静态html文件 生成html目录 gitbook build [书籍路径] [输出路径] 生成PDF文件 gitbook pdf ./ ./mybook.pdf 生成epub电子书 gitbook epub ./ ./mybook.epub pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 08:54:52 "},"dev-gitbook/GitBook-book.json.html":{"url":"dev-gitbook/GitBook-book.json.html","title":"GitBook之book.json配置","keywords":"","body":" GitBook 详解 GitBook book.json 说明及使用 book.json 字段说明 styles 的配置 gitbok 插件安装的方法 gitbook 默认插件 book.json 实例 gitbook 常用插件 back-to-top-button chapter-fold code sharing-plus tbfed-pagefooter page-copyright simple-page-toc ancre-navigation klipse donate pageview-count popup GitBook 详解 GitBook book.json 说明及使用 Question Answer book.json是用来做什么的? 配置 Gitbook 生成静态页面的配置文件 book.json怎么创建放在那里？ 手动创建，gitbook 项目的根目录，和 SUMMARY.md 同级 book.json有哪些配置？ title, author, description, language, links , styles, plugins, pluginsConfig 字段说明 本项目book.json配置 styles中的样式指定文件( \"website\": \"assert/style/website.css\",)怎么生成？ 自己创建和编写，根据需求调整样式，路径可以自己定义， 详细配置 在book.json配置plugins 后怎么生效呢？ 1. 首先插件要配置正确，名称千万不要错， 2. 安装插件，这里介绍三种方法 3. gitbook buil 即可生效 默认插件有哪些？屏蔽默认插件如何操作 1. 屏蔽默认插件，在 book.json 中 的 plugins 中配置 -highlight 这样就去掉了默认的高亮插件， 2. 默认的插件有 常见的插件有哪些？ 常见的插件说明及使用 book.json 字段说明 属性 含义 Demo title 设置书本的标题 \"title\": \"Knowledge\" author 作者的相关信息 \"author\": \"Royal\" description 本书的简单描述 \"description\":\"这是我的环境配置说明\" language Gitbook使用的语言 \"language\": \"zh-hans\" styles 自定义页面样式，用于 book build \"style\":{ \"website\": \"assert/style/website.css\"} plugins 插件列表 \"plugins\":{\"back-to-top-button\"} pluginsConfig 插件配置 具体配置根据使用的插件进行配置 styles 的配置 目前style配置根据导出的文件类型来，目前也就下面几种类型 styles Key 含义 website 生成Html将会使用的样式文件 ebook 生成ebook..... pdf 生成pdf..... mobi 生成mobi..... epub 生成epub..... gitbok 插件安装的方法 在根目录下执行 gitbook install 使用npm安装，命令格式 npm install gitbook-plugin-插件名字，如 npm install gitbook-plugin-code 从 GitHub 下载源码，放到node_modules文件夹里 gitbook 默认插件 插件名词 说明 highlight： 代码高亮 search： 导航栏查询功能（不支持中文） sharing： 右上角分享功能 font-settings： 字体设置（最上方的\"A\"符号） livereload： 为GitBook实时重新加载 book.json 实例 { \"title\": \"Knowledge\", \"language\": \"zh-hans\", \"plugins\": [ \"code\", \"back-to-top-button\", \"tbfed-pagefooter\", \"search-pro\", \"fontsettings\", \"simple-page-toc\", \"links\" ], \"styles\": { \"website\": \"assert/style/website.css\", \"ebook\": \"assert/style/ebook.css\", \"pdf\": \"assert/style/pdf.css\", \"mobi\": \"assert/style/mobi.css\", \"epub\": \"assert/style/epub.css\" }, \"pluginsConfig\": { \"tbfed-pagefooter\": { \"copyright\": \"pengqinping\", \"modify_label\": \"最后更新时间：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, \"fontsettings\": { \"theme\": \"white\", \"family\": \"serif\", \"size\": 12 }, \"simple-page-toc\": { \"maxDepth\": 3, \"skipFirstH1\": true }, \"links\": { \"gitbook\": false } } } gitbook 常用插件 参考地址：https://www.jianshu.com/p/427b8bb066e6 插件大全：https://zhaoda.net/2015/11/09/gitbook-plugins/ 插件大全：http://gitbook.zhangjikai.com/plugins.html#gitbook-%E6%8F%92%E4%BB%B6 back-to-top-button 插件名词 back-to-top-button 返回头部 修改配置 在book.json 中新增插件 \"plugins\" : [ \"page-toc-button\" ] 新增插件配置 \"pluginsConfig\": { \"page-toc-button\": {\"maxTocDepth\": 2, \"minTocSize\": 2} } 安装方法 1. gitbook install 2. npm install gitbook-plugin-back-top-button 图示 chapter-fold 插件名词 chapter-fold 折叠目录 修改配置 在book.json 中新增插件 \"plugins\" : [ \"chapter-fold\" ] 安装方法 1. gitbook install 2. npm install gitbook-plugin-chapter-fold 图示 code 插件名词 code 显示代码copy按钮 修改配置 在book.json 中新增插件 \"plugins\" : [ \"code\" ] 新增配置 \"pluginsConfig\": { \"code\": {\"copyButtons\": false } } 安装方法 1. gitbook install 2. npm install gitbook-plugin-code 参数配置 copyButtons 是否显示 copy 按钮 图示 sharing-plus 插件名词 sharing-plus 分享插件 修改配置 在book.json 中新增插件 \"plugins\" : [ \"sharing-plus\" ] 新增配置 安装方法 1. gitbook install 2. npm install gitbook-plugin-sharing-plus 参数配置 为true的代表直接显示在页面顶端，为false的不显示，不写默认为false \"all\"中代表点击分享符号显示出来的 图示 tbfed-pagefooter 插件名词 tbfed-pagefooter 页面添加页脚 修改配置 在book.json 中新增插件 \"plugins\" : [ \"tbfed-pagefooter\" ] 新增配置 安装方法 1. gitbook install 2. npm install gitbook-plugin-tbfed-pagefooter 图示 page-copyright 插件名词 page-copyright 页面添加页脚 修改配置 在book.json 中新增插件 \"plugins\" : [ \"page-copyright\" ] 新增配置 安装方法 1. gitbook install 2. npm install gitbook-plugin-page-copyright 图示 暂时无图，可以自己配置 simple-page-toc 插件名词 simple-page-toc 生成本页目录 修改配置 在book.json 中新增插件 \"plugins\" : [ \"simple-page-toc\" ] 新增配置 \"simple-page-toc\": { \"maxDepth\": 3, \"skipFirstH1\": true} 安装方法 1. gitbook install 2. npm install gitbook-plugin-simple-page-toc 参数说明 maxTocDepth 标题的最大深度（2 = h1 + h2 + h3）。不支持值> 2 minTocSize 显示toc按钮的最小toc条目数。 新增方法 使用方法: 在需要生成目录的地方用下面的标签括起来，全文都生成的话就在首尾添加 &lt;!-- toc --&gt; &lt;!-- endtoc --&gt; 图示 ancre-navigation 插件名词 ancre-navigation 悬浮目录和返回 修改配置 在book.json 中新增插件 \"plugins\" : [ \"ancre-navigation\" ] 安装方法 1. gitbook install 2. npm install gitbook-plugin-ancre-navigation 图示 klipse 插件名词 klipse 嵌入类似IDE的功能 修改配置 在book.json 中新增插件 \"plugins\" : [ \"klipse\" ] 安装方法 1. gitbook install 2. npm install gitbook-plugin-klipse 支持语言 Javascript ,ruby,C++, PHP ,Python, JSX ,EcmaScript2017,Google Charts,Scheme, BrainFuck 代码实例 如下 print [x + 1 for x in range(10)] donate 插件名词 donate 打赏插件 修改配置 在book.json 中新增插件 \"plugins\" : [ \"donate\" ] \"pluginsConfig\": { \"donate\": { \"wechat\": picWeChar,\"alipay\": zfbpic, \"title\": \"\",\"button\": \"赏\",\"alipayText\": \"支付宝打赏\", \"wechatText\": \"微信打赏\" } } 安装方法 1. gitbook install 2. npm install gitbook-plugin-donate 参数说明 wechat 微信收款图片 alipay 支付宝收款图片 图示 无测试图片 pageview-count 插件名词 pageview-count 阅读量计数 修改配置 在book.json 中新增插件 \"plugins\" : [ \"ageview-count\" ] 安装方法 1. gitbook install 2. npm install gitbook-pageview-count 图示 popup 插件名词 popup 弹出大图 修改配置 在book.json 中新增插件 \"plugins\" : [ \"popup\" ] 安装方法 1. gitbook install 2. npm install gitbook-popup 图示 点击图片弹出预览 pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 08:54:52 "},"dev-hexo/hexo-环境搭建.html":{"url":"dev-hexo/hexo-环境搭建.html","title":"Hexo快速构建个人博客","keywords":"","body":"Hexo快速构建个人博客 操作说明 hexo init 初始化项目 hexo new page \"First Page\" 创建一个文章 hexo server 启动本地服务查看效果 hexo generate 文件部署前需要生成 hexo deploy 部署到git仓库， 部署和生成可以一起 hexo generate --deploy || hexo deploy --generate || 简写（ hexo g -d | hexo d -g） 说明：编译代码全部提交到 master 分支，使用 hexo deploy 自动推送到 gh-pages/condig-pages 分支, 不能自己手动进行推送代码到 生成网页的分支 相关命名 hexo server --启动服务 hexo generate --生成静态页面文件全部放在public文件夹下面 hexo deploy --自动部署到相应的代码库，目前配置了两个，github&coding hexo new page \"page\" hexo new post pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 14:23:19 "},"dev-gitbook/GitBook-命令和npm.html":{"url":"dev-gitbook/GitBook-命令和npm.html","title":"GitBook-命令和npm","keywords":"","body":"当gitbook 遇到了 npm 为了方便代码管理和提交效率 对一些操作进行了 npm 管理 package.json 中新增脚本 \"scripts\": { \"start\": \"gitbook serve\", \"predeploy\": \"echo \\\"======= Begin deploy =======\\\" \", \"deploy\": \"gitbook build && git subtree push --prefix=_book origin coding-pages\", \"postdeoply\": \"echo \\\"======= End deploy =======\\\" \", \"pdf\": \"gitbook pdf ./ ./knowledge.pdf\", \"epub\": \"gitbook epub ./ ./knowledge.epub\", \"prepush\": \"echo \\\"======= Begin Auto push =======\\\" \", \"push\": \"git status && git add . && read -p \\\"please input commit info:\\\" commitInfo && git commit -m \\\"$commitInfo\\\" && git pull && git push\", \"postpush\": \"echo \\\"======= End Auto push =======\\\" \" } 使用方法 npm start 启动 gitbook服务 npm run delopy 发布 build 的静态页面到 对于的 page 服务，可以供公网访问 npm run push 自动意见提交代码 过程中需要输入 commit 日志 pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 13:19:04 "},"dev-hexo/":{"url":"dev-hexo/","title":"Hexo","keywords":"","body":"Hexo 搭建hexo博客相关网址 hexo教程官网:https://hexo.io/zh-cn/ 搭建教程:https://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html 主题推荐:http://www.jianshu.com/p/bcdbe7347c8d next主题安装:http://theme-next.iissnan.com/getting-started.html pengqinping all right reserved，powered by Gitbook最后更新时间： 2019-06-07 14:22:51 "}}